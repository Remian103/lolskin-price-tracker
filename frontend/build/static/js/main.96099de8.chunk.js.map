{"version":3,"sources":["components/NavAnchor.js","components/Carousel.js","hooks/useDataFetch.js","components/RecommendCarousel.js","components/ChampBox.js","pages/Home.js","pages/Skins.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","anchorList","map","item","type","smooth","to","link","bg","hoverBg","cursor","rounded","name","id","href","target","Carousel","list","flktyOption","cellOption","useState","undefined","flkty","setFlkty","useEffect","on","console","log","selectedIndex","inside","className","m","r","xs","md","h","w","src","full_image_url","alt","title","border","borderColor","trimmed_image_url","p","b","options","flickityRef","ref","dataFetchReducer","state","action","isLoading","isError","data","payload","Error","useDataFetch","initialUrl","initialData","url","setUrl","useReducer","dispatch","didCancel","a","axios","result","fetchData","RecommendCarousel","skinList","maxW","initialIndex","wrapAround","autoPlay","ChampBox","champId","setId","champLoading","champError","champList","display","setDisplay","skinLoading","skinError","doFetch","items","icon_url","onClick","d","justify","flexWrap","pos","right","top","shadow","hoverShadow","size","color","Home","align","flexDir","l","textSize","textAlign","Skins","params","useRouteMatch","doSkinFetch","skinId","skin","chartRef","useRef","ctx","current","getContext","Chart","register","registerables","history","price_history","sort","labels","date","datasets","label","price","fill","tension","chart","responsive","maintainAspectRatio","scales","y","beginAtZero","stackWeight","destroy","championSkinList","doChampionFetch","champion_id","minW","App","exact","path","exect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","StrictMode","value","debug","debugAfterHydration","theme","colors","primary","accent","document","getElementById"],"mappings":"8QAkEeA,MA5Df,YAA8B,IAAfC,EAAc,EAAdA,WAEX,OACI,8BACMA,EAAWC,KAAI,SAACC,GACd,MAAkB,SAAdA,EAAKC,KAED,cAAC,IAAD,CACIC,QAAM,EACNC,GAAIH,EAAKI,KAFb,SAII,cAAC,SAAD,CACIC,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QAVCT,EAAKU,IAcL,YAAdV,EAAKC,KAEN,cAAC,SAAD,CAEIU,KAAMX,EAAKI,KACXQ,OAAO,SAHX,SAKI,cAAC,SAAD,CACIP,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QAVLT,EAAKU,IAgBd,cAAC,IAAD,CAEIP,GAAIH,EAAKI,KAFb,SAII,cAAC,SAAD,CACIC,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QATLT,EAAKU,U,sCC0CvBG,MAlFf,YAAsD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WAAc,EAGvBC,wBAASC,GAHc,mBAG1CC,EAH0C,KAGnCC,EAHmC,KAOjDC,qBAAU,gBACQH,IAAVC,GACAA,EAAMG,GAAG,UAAU,WACfC,QAAQC,IAAR,2BAAgCL,EAAMM,qBAG/C,CAACN,IAIJ,IAAMO,EAASZ,EAAKf,KAAI,SAACC,GACrB,MAAwB,oBAApBgB,EAAWf,KAEP,cAAC,IAAD,CAEIE,GAAE,iBAAYH,EAAKU,IAFvB,SAII,cAAC,MAAD,CACIiB,UAAU,gBACVtB,GAAG,cACHuB,EAAG,CAAEC,EAAG,CAAEC,GAAI,SAAUC,GAAI,SAC5BC,EAAG,CAAEF,GAAI,QAASC,GAAI,SACtBE,EAAG,CAAEH,GAAI,QAASC,GAAI,SAL1B,SAOI,qBACIG,IAAKlC,EAAKmC,eACVC,IAAKpC,EAAKS,KACV4B,MAAOrC,EAAKS,UAbfT,EAAKU,IAmBO,mBAApBM,EAAWf,KAEZ,cAAC,IAAD,CAEIE,GAAE,iBAAYH,EAAKU,IAFvB,SAII,cAAC,MAAD,CACIiB,UAAU,gBACVtB,GAAG,cACHuB,EAAG,CAAEC,EAAG,CAAEC,GAAI,SAAUC,GAAI,SAC5BC,EAAG,CAAEF,GAAI,QAASC,GAAI,SACtBE,EAAG,CAAEH,GAAI,QAASC,GAAI,SACtBO,OAAO,YACPC,YAAY,OAPhB,SASI,qBACIL,IAAKlC,EAAKwC,kBACVJ,IAAKpC,EAAKS,KACV4B,MAAOrC,EAAKS,UAffT,EAAKU,IAqBT,gCAGjB,OACI,cAAC,MAAD,CACI+B,EAAG,CAAEC,EAAG,QADZ,SAGI,cAAC,IAAD,CACIf,UAAU,WACVgB,QAAS5B,EACT6B,YAtEW,SAACC,GACpBzB,EAASyB,IAkEL,SAKKnB,O,kDChFjB,SAASoB,EAAiBC,EAAOC,GAC7B,OAAQA,EAAO/C,MACX,IAAK,aACD,OAAO,2BACA8C,GADP,IAEIE,WAAW,EACXC,SAAS,IAEjB,IAAK,gBACD,MAAO,CACHD,WAAW,EACXC,SAAS,EACTC,KAAMH,EAAOI,SAErB,IAAK,gBACD,OAAO,2BACAL,GADP,IAEIE,WAAW,EACXC,SAAS,IAEjB,QACI,MAAM,IAAIG,OAwCPC,MApCf,SAAsBC,EAAYC,GAAc,IAAD,EACrBvC,mBAASsC,GADY,mBACpCE,EADoC,KAC/BC,EAD+B,OAEjBC,qBAAWb,EAAkB,CACnDG,WAAW,EACXC,SAAS,EACTC,KAAMK,IALiC,mBAEpCT,EAFoC,KAE7Ba,EAF6B,KAiC3C,OAzBAvC,qBAAU,WACN,IAAIwC,GAAY,EAmBhB,MAHW,eAARJ,GAdY,uCAAG,4BAAAK,EAAA,6DACdF,EAAS,CAAE3D,KAAM,eADH,kBAIW8D,IAAMN,GAJjB,OAIJO,EAJI,OAMLH,GACDD,EAAS,CAAE3D,KAAM,gBAAiBmD,QAASY,EAAOb,OAP5C,gDASLU,GACDD,EAAS,CAAE3D,KAAM,kBAVX,yDAAH,oDAeXgE,GAEG,WACHJ,GAAY,KAEjB,CAACJ,IAEG,CAACV,EAAOW,IClCJQ,MAtBf,WAA8B,IAAD,EAE0BZ,EAC/C,uBACA,IAJqB,0BAEjBL,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,QAAgBiB,EAFV,EAEGhB,KAW5B,OAbyB,KAajB,mCACJF,EAAY,gDACZC,EAAU,kDACV,cAAC,MAAD,CAAKkB,KAAK,OAAV,SACI,cAAC,EAAD,CAAUtD,KAAMqD,EAAUpD,YAVV,CACpBsD,aAAc,EACdC,YAAY,EACZC,SAAU,KAOkDvD,WAAY,CAAEf,KAAM,0B,OCkEzEuE,MAlFf,WAAqB,IAAD,EACSvD,mBAAS,GADlB,mBACTwD,EADS,KACAC,EADA,OAE6DpB,EAAa,iBAAkB,IAF5F,0BAEGqB,EAFH,EAER1B,UAAkC2B,EAF1B,EAEiB1B,QAA2B2B,EAF5C,EAEsC1B,KAFtC,QAIclC,oBAAS,IAJvB,mBAIT6D,EAJS,KAIAC,EAJA,OAKgEzB,EAAa,aAAc,IAL3F,0BAKG0B,EALH,EAKR/B,UAAiCgC,EALzB,EAKgB/B,QAA0BiB,EAL1C,EAKoChB,KAAiB+B,EALrD,KAMhB7D,qBAAU,WACFyD,GACAI,EAAQ,kBAAD,OAAmBT,EAAnB,aACZ,CAACK,EAASL,EAASS,IAQtB7D,qBAAU,WACNE,QAAQC,IAAI2C,KACb,CAACA,IACJ9C,qBAAU,WACNE,QAAQC,IAAIqD,KACb,CAACA,IAEJ,IAAMM,EAAQN,EAAU9E,KAAI,SAACC,GAAD,OACxB,cAAC,MAAD,CAEIyC,EAAE,SAFN,SAII,qBAAKP,IAAKlC,EAAKoF,SACXhD,IAAKpC,EAAKS,KACV4B,MAAOrC,EAAKS,KACZ4E,QAAS,WAAON,GAAW,GAAOL,EAAM1E,EAAKU,QAN5CV,EAAKU,OAWlB,OAAQ,qCACJ,cAAC,MAAD,CACI4E,EAAE,OACFC,QAAQ,eACRC,SAAS,OACTvD,EAAE,OACFmC,KAAK,SACL3B,EAAE,SANN,SASQkC,EAAe,gDACfC,EAAa,kDACbO,IAKR,cAAC,MAAD,CAAKxD,UAAW,oBAAsBmD,EAAU,MAAQ,IAAxD,SAESA,EACDE,EAAc,gDACdC,EAAY,kDACZ,qCACI,cAAC,SAAD,CACIQ,IAAI,WACJC,MAAM,SACNC,IAAI,SACJ3D,EAAE,SACFC,EAAE,SACF5B,GAAG,aACHC,QAAQ,aACRE,QAAQ,SACRoF,OAAO,IACPC,YAAY,IACZR,QAAS,kBAAMN,GAAW,IAX9B,SAaI,cAAC,OAAD,CAAMtE,KAAK,QAAQqF,KAAK,OAAOC,MAAM,YAEzC,cAAC,EAAD,CAAUjF,KAAMqD,EAAUpD,YAjElB,CACpBsD,aAAc,GAgEsDrD,WAAY,CAAEf,KAAM,uBAnBrE,mCCWZ+F,MApEf,WACI,OAAQ,qCACJ,cAAC,MAAD,CACIV,EAAE,OACFtD,EAAG,CAAEF,GAAI,QAASC,GAAI,SACtBkE,MAAM,SACNV,QAAQ,SACRW,QAAQ,SALZ,SAOI,cAAC,OAAD,CACIzD,EAAG,CAAE0D,EAAG,SAAUtE,EAAG,UACrBuE,SAAS,WACTC,UAAU,SAHd,iCASJ,eAAC,MAAD,CAAK1E,UAAU,oBAAoBtB,GAAG,WAAtC,UACI,cAAC,MAAD,CAAKsB,UAAU,qBAAqBtB,GAAG,aAEvC,qBAAKsB,UAAU,YAAYjB,GAAG,oBAC9B,qBAAKiB,UAAU,gBAAf,SACI,cAAC,OAAD,CACIyE,SAAU,CAAEtE,GAAI,OAAQC,GAAI,UADhC,+BAMJ,cAAC,EAAD,IAEA,qBAAKJ,UAAU,YAAYjB,GAAG,cAC9B,qBAAKiB,UAAU,gBAAf,SACI,cAAC,OAAD,CACIyE,SAAU,CAAEtE,GAAI,OAAQC,GAAI,UADhC,6BAMJ,cAAC,EAAD,IACA,cAAC,MAAD,CACIC,EAAE,SACF3B,GAAG,QACH+F,SAAS,WACTC,UAAU,SAJd,0B,eCmGGC,MAhIf,WAAkB,IACNC,EAAWC,YAAc,kBAAzBD,OAERlF,qBAAU,WACNoF,EAAY,cAAD,OAAeF,EAAOG,WAClC,CAACH,IALS,MAQ6CjD,EAAa,cAAD,OACpDiD,EAAOG,QACrB,IAVS,0BAQsBC,GARtB,EAQJ1D,UARI,EAQOC,QARP,EAQgBC,MAAcsD,EAR9B,KAcPG,EAAWC,iBAAO,MACxBxF,qBAAU,WACN,IAAMyF,EAAMF,EAASG,QAAQC,WAAW,MACxCC,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAElB,IAAMC,EAAUT,EAAKU,eAAiB,GACtC9F,QAAQC,IAAI4F,GAEZA,EAAQE,OACR,IAMMnE,EAAO,CACXoE,OAPaH,EAAQrH,KAAI,SAAAC,GAAI,OAAIA,EAAKwH,QAQtCC,SAAU,CAAC,CACTC,MAAO,mBACPvE,KATUiE,EAAQrH,KAAI,SAAAC,GAAI,OAAIA,EAAK2H,SAUnCC,MAAM,EACNrF,YAAa,oBACbsF,QAAS,KAIPC,EAAQ,IAAIb,IAAMH,EAAK,CACzB7G,KAAM,OACNkD,KAAMA,EACNR,QAAS,CACLoF,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACJC,EAAG,CACCC,aAAa,EACbC,YAAa,OAO7B,OAFA7G,QAAQC,IAAIsG,GAEL,WACHvG,QAAQC,IAAI,oBACZsG,EAAMO,aAEX,CAAC1B,IA5DS,MA+DuCrD,EAChD,aACA,IAjES,mBA+DCgF,EA/DD,KA+DLnF,KAAyBoF,EA/DpB,KA8Eb,OANAlH,qBAAU,gBACmBH,IAArByF,EAAK6B,aACLD,EAAgB,kBAAD,OAAmB5B,EAAK6B,YAAxB,aAEpB,CAAC7B,IAEI,qCACJ,cAAC,MAAD,CACIlB,IAAI,QACJxD,EAAE,OACFD,EAAE,OACFyG,KAAK,QAJT,SAMI,cAAC,QAAD,CACIvG,IAAKyE,EAAKxE,eACVF,EAAE,WAGV,cAAC,MAAD,CAAKQ,EAAE,UACP,eAAC,MAAD,CAAKd,UAAU,oBAAoBtB,GAAG,cAAtC,UACI,cAAC,MAAD,CAAKsB,UAAU,qBAAqBtB,GAAG,aACvC,qBAAKsB,UAAU,gBAAf,SACI,cAAC,OAAD,CACIyE,SAAU,CAAEtE,GAAI,OAAQC,GAAI,UADhC,SAGK4E,EAAKlG,SAGd,qBAAKkB,UAAU,kBAAf,SACI,wBAAQkB,IAAK+D,MAEjB,qBAAKjF,UAAU,gBAAf,SACI,cAAC,OAAD,CACIyE,SAAU,CAAEtE,GAAI,OAAQC,GAAI,UADhC,wEAMJ,cAAC,MAAD,CACIU,EAAG,CAACyF,EAAE,QACN9D,KAAK,OAFT,SAII,cAAC,EAAD,CAAUtD,KAAMwH,EAAkBvH,YA/CtB,CACpBsD,aAAc,GA8C0DrD,WAAY,CAAEf,KAAM,sBAExF,cAAC,MAAD,CACI+B,EAAE,SACF3B,GAAG,QACH+F,SAAS,WACTC,UAAU,SAJd,0BChFGqC,MApCf,WAUI,OAAQ,qCACJ,cAAC,MAAD,CAAK/G,UAAU,oBACf,wBAAQA,UAAU,cAAlB,SACI,cAAC,EAAD,CAAK7B,WAXM,CACf,CAAEY,GAAI,EAAGD,KAAM,SAAKL,KAAM,QAASH,KAAM,QACzC,CAAES,GAAI,EAAGD,KAAM,4BAASL,KAAM,mBAAoBH,KAAM,QACxD,CAAES,GAAI,EAAGD,KAAM,kCAAUL,KAAM,aAAcH,KAAM,QACnD,CAAES,GAAI,EAAGD,KAAM,4BAASL,KAAM,SAAUH,KAAM,WAC9C,CAAES,GAAI,EAAGD,KAAM,eAAML,KAAM,SAAUH,KAAM,aAS3C,eAAC,IAAD,WACI,cAAC,IAAD,CAAO0I,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUzI,GAAG,YAEjB,cAAC,IAAD,CAAOwI,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,SAAlB,SACI,4CAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,mDClCDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCgBRQ,EAAS,I,MAAIC,GAInBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,WAAD,CAAmBC,MAAOL,EAAQM,MATE,UASYC,qBAAmB,EAAnE,SACI,eAAC,gBAAD,CAAeC,MAlBb,CACVC,OAAQ,CACJC,QAAS,SACTC,OAAQ,WAeJ,UACI,cAAC,aAAD,IACA,cAAC,IAAD,UACI,cAAC,EAAD,aAKhBC,SAASC,eAAe,SAM5BtB,K","file":"static/js/main.96099de8.chunk.js","sourcesContent":["import React from 'react';\nimport \"../css/NavAnchor.css\";\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { Button, Anchor } from \"atomize\";\n\nfunction Nav({ anchorList }) {\n\n    return (\n        <nav>\n            { anchorList.map((item) => {\n                if (item.type === \"hash\")\n                    return (\n                        <HashLink key={item.id}\n                            smooth\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </HashLink>\n                    );\n                else if (item.type === \"new-tab\")\n                    return (\n                        <Anchor\n                            key={item.id}\n                            href={item.link}\n                            target=\"_blank\"\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </Anchor>\n                    );\n                else \n                    return (\n                        <Link\n                            key={item.id}\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </Link>\n                    );\n            }\n            )}\n        </nav>\n    );\n}\n\nexport default Nav","import React, { useState, useEffect } from \"react\";\nimport Flickity from \"react-flickity-component\";\nimport { Link } from \"react-router-dom\";\nimport { Div } from \"atomize\";\nimport \"../css/flickity.css\";\nimport \"../css/Carousel.css\";\n\nfunction Carousel({ list, flktyOption, cellOption }) {\n\n    // use flickity API\n    const [flkty, setFlkty] = useState(undefined);\n    const getFlickityRef = (ref) => {\n        setFlkty(ref);\n    }\n    useEffect(() => {\n        if (flkty !== undefined) {\n            flkty.on('settle', () => {\n                console.log(`current index is ${flkty.selectedIndex}`)\n            });\n        }\n    }, [flkty]);\n\n    \n    // carousel cell design\n    const inside = list.map((item) => {\n        if (cellOption.type === \"recommend-skins\") {\n            return (\n                <Link\n                    key={item.id}\n                    to={`/skins/${item.id}`}\n                >\n                    <Div\n                        className=\"carousel-cell\"\n                        bg=\"transparent\"\n                        m={{ r: { xs: \"0.5rem\", md: \"2rem\" } }}\n                        h={{ xs: \"210px\", md: \"350px\" }}\n                        w={{ xs: \"390px\", md: \"650px\" }}\n                    >\n                        <img\n                            src={item.full_image_url}\n                            alt={item.name}\n                            title={item.name}\n                        />\n                    </Div>\n                </Link>\n            );\n        }\n        else if (cellOption.type === \"champion-skins\") {\n            return (\n                <Link\n                    key={item.id}\n                    to={`/skins/${item.id}`}\n                >\n                    <Div\n                        className=\"carousel-cell\"\n                        bg=\"transparent\"\n                        m={{ r: { xs: \"0.5rem\", md: \"2rem\" } }}\n                        h={{ xs: \"336px\", md: \"336px\" }}\n                        w={{ xs: \"185px\", md: \"185px\" }}\n                        border=\"2px solid\"\n                        borderColor=\"gold\"\n                    >\n                        <img\n                            src={item.trimmed_image_url}\n                            alt={item.name}\n                            title={item.name}\n                        />\n                    </Div>\n                </Link>\n            );\n        }\n        else return (<></>);\n    });\n\n    return (\n        <Div /* responsive */\n            p={{ b: \"30px\" }}\n        >\n            <Flickity\n                className=\"carousel\"\n                options={flktyOption}\n                flickityRef={getFlickityRef}\n            >\n                {inside}\n            </Flickity>\n        </Div>\n    );\n}\n\nexport default Carousel;","import { useState, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\n\nfunction dataFetchReducer(state, action) {\n    switch (action.type) {\n        case \"FETCH_INIT\":\n            return {\n                ...state,\n                isLoading: true,\n                isError: false\n            };\n        case \"FETCH_SUCCESS\":\n            return {\n                isLoading: false,\n                isError: false,\n                data: action.payload\n            };\n        case \"FETCH_FAILURE\":\n            return {\n                ...state,\n                isLoading: false,\n                isError: true\n            };\n        default:\n            throw new Error();\n    }\n}\n\nfunction useDataFetch(initialUrl, initialData) {\n    const [url, setUrl] = useState(initialUrl);\n    const [state, dispatch] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isError: false,\n        data: initialData\n    });\n\n    useEffect(() => {\n        let didCancel = false;\n\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_INIT\" });\n\n            try {\n                const result = await axios(url);\n\n                if (!didCancel)\n                    dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n            } catch (error) {\n                if (!didCancel)\n                    dispatch({ type: \"FETCH_FAILURE\" });\n            }\n        };\n\n        if(url !== \"initialUrl\")\n            fetchData();\n\n        return () => {\n            didCancel = true;\n        };\n    }, [url]);\n\n    return [state, setUrl];\n}\n\nexport default useDataFetch;","import React from \"react\";\nimport { Div, Text } from \"atomize\";\nimport Carousel from \"./Carousel\";\nimport useDataFetch from \"../hooks/useDataFetch\";\n\nfunction RecommendCarousel() {\n\n    const [{isLoading, isError, data : skinList}, _] = useDataFetch(\n        \"/api/recommendations\",\n        []\n    );\n    \n    const flickityOptions = {\n        initialIndex: 1,\n        wrapAround: true,\n        autoPlay: 3000,\n    };\n\n    return (<>{\n        isLoading ? <p> is loading... </p> :\n        isError ? <p> something error </p> :\n        <Div maxW=\"100%\">\n            <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"recommend-skins\" }} />\n        </Div>\n    }</>);\n}\n\nexport default RecommendCarousel;","import React, { useState, useEffect } from \"react\";\nimport { Div, Text, Button, Icon } from \"atomize\";\nimport Carousel from \"./Carousel\";\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport \"../css/ChampBox.css\";\n\nfunction ChampBox() {\n    const [champId, setId] = useState(0);\n    const [{isLoading: champLoading, isError: champError, data: champList}, _] = useDataFetch(\"/api/champions\", []);\n\n    const [display, setDisplay] = useState(false);\n    const [{isLoading: skinLoading, isError: skinError, data: skinList}, doFetch] = useDataFetch(\"initialUrl\", []);\n    useEffect(() => {\n        if (display)\n            doFetch(`/api/champions/${champId}/skins`);\n    }, [display, champId, doFetch]);\n    const flickityOptions = {\n        initialIndex: 0,\n        //wrapAround: true,\n        //autoPlay: 3000,\n    };\n    \n    //test log\n    useEffect(() => {\n        console.log(skinList);\n    }, [skinList]);\n    useEffect(() => {\n        console.log(champList);\n    }, [champList]);\n\n    const items = champList.map((item) =>\n        <Div\n            key={item.id}\n            p=\"0.5rem\"\n        >\n            <img src={item.icon_url}\n                alt={item.name}\n                title={item.name}\n                onClick={() => {setDisplay(true); setId(item.id);}}\n            />\n        </Div>\n    );\n\n    return (<>\n        <Div\n            d=\"flex\"\n            justify=\"space-around\"\n            flexWrap=\"wrap\"\n            w=\"100%\"\n            maxW=\"1024px\"\n            p=\"0.5rem\"\n        >\n            {\n                champLoading ? <p> is loading... </p> :\n                champError ? <p> something error </p> :\n                items\n            }\n        </Div>\n        \n        {/* silde in out css */}\n        <Div className={\"transition-slide\" + (display ? \" in\" : \"\")}>\n            {\n                !display ? <></> :\n                skinLoading ? <p> is loading... </p> :\n                skinError ? <p> something error </p> :\n                <>\n                    <Button\n                        pos=\"absolute\"\n                        right=\"0.5rem\"\n                        top=\"0.5rem\"\n                        h=\"2.5rem\"\n                        w=\"2.5rem\"\n                        bg=\"warning700\"\n                        hoverBg=\"warning600\"\n                        rounded=\"circle\"\n                        shadow=\"2\"\n                        hoverShadow=\"4\"\n                        onClick={() => setDisplay(false)}\n                    >\n                        <Icon name=\"Cross\" size=\"20px\" color=\"white\" />\n                    </Button>\n                    <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n                </>\n            }\n        </Div>\n    </>);\n}\n\nexport default ChampBox;","import React from \"react\";\nimport { Div, Text } from \"atomize\";\nimport RecommendCarousel from '../components/RecommendCarousel';\nimport ChampBox from '../components/ChampBox';\n\nfunction Home() {\n    return (<>\n        <Div /* title */\n            d=\"flex\"\n            h={{ xs: \"150px\", md: \"400px\" }}\n            align=\"center\"\n            justify=\"center\"\n            flexDir=\"column\"\n        >\n            <Text\n                p={{ l: \"0.5rem\", r: \"0.5rem\" }}\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                LOL PRICE TRACKER\n            </Text>\n        </Div>\n\n        <Div className=\"content-container\" bg=\"black400\" /* main content */ >\n            <Div className=\"content-background\" bg=\"black600\" /* background */ />\n\n            <div className=\"hash-link\" id=\"recommend-skins\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Recommend Skins\n                </Text>\n            </div>\n            <RecommendCarousel />\n\n            <div className=\"hash-link\" id=\"champions\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Champion List\n                </Text>\n            </div>\n            <ChampBox />\n            <Div\n                h=\"1000px\"\n                bg=\"brown\"\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                Dummy\n            </Div>\n            {/*\n            <div className=\"App-header\">\n                <img src=\"/images/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </div>\n            */}\n        </Div>\n    </>);\n}\n\nexport default Home;","import React, { useEffect, useRef } from \"react\";\nimport { Div, Image, Text } from \"atomize\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Chart, registerables } from 'chart.js';\n\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport Carousel from \"../components/Carousel\";\n\n\n/**\n * \n * page for skin information\n * url : /skins/:skinId\n * \n */\n\nfunction Skins() {\n    const { params } = useRouteMatch(\"/skins/:skinId\");\n    // update when skin id changed\n    useEffect(() => {\n        doSkinFetch(`/api/skins/${params.skinId}`);\n    }, [params]);\n\n    // skin data fetch\n    const [{ isLoading, isError, data: skin }, doSkinFetch] = useDataFetch(\n        `/api/skins/${params.skinId}`,\n        {}\n    );\n\n    //chart data\n    const chartRef = useRef(null);\n    useEffect(() => {\n        const ctx = chartRef.current.getContext(\"2d\");\n        Chart.register(...registerables);\n        \n        const history = skin.price_history || [];\n        console.log(history);\n\n        history.sort();\n        const labels = history.map(item => item.date);\n        const datas = history.map(item => item.price);\n        // dummy\n        //const labels = [\"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"c\", \"d\"];\n        //const datas = [65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56, 55, 40, 65, 59, 80, 81, 56, 55];\n\n        const data = {\n          labels: labels,\n          datasets: [{\n            label: 'My First Dataset',\n            data: datas,\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0\n          }]\n        };\n        \n        const chart = new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                        stackWeight: 1\n                    }\n                }\n            }\n        });\n        console.log(chart);\n\n        return () => {\n            console.log(\"chart destroy...\");\n            chart.destroy();\n        };\n    }, [skin]);\n\n    // skin list fetch\n    const [{data: championSkinList}, doChampionFetch] = useDataFetch(\n        \"initialUrl\",\n        []\n    );\n    const flickityOptions = {\n        initialIndex: 0,\n        //wrapAround: true,\n        //autoPlay: 3000,\n    };\n    useEffect(() => {\n        if (skin.champion_id !== undefined) {\n            doChampionFetch(`/api/champions/${skin.champion_id}/skins`);\n        }\n    }, [skin]);\n\n    return (<>\n        <Div\n            pos=\"fixed\"\n            w=\"100%\"\n            h=\"100%\"\n            minW=\"700px\"\n        >\n            <Image\n                src={skin.full_image_url}\n                w=\"100%\"\n            />\n        </Div>\n        <Div p=\"200px\"></Div>\n        <Div className=\"content-container\" bg=\"transparent\" /* main content */ >\n            <Div className=\"content-background\" bg=\"black600\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    {skin.name}\n                </Text>\n            </div>\n            <div className=\"chart-container\">\n                <canvas ref={chartRef}></canvas>\n            </div>\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    챔피언의 다른 스킨들\n                </Text>\n            </div>\n            <Div\n                p={{y:\"1rem\"}}\n                maxW=\"100%\"\n            >\n                <Carousel list={championSkinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n            </Div>\n            <Div\n                h=\"1000px\"\n                bg=\"brown\"\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                Dummy\n            </Div>\n        </Div>\n    </>);\n}\n\nexport default Skins;","import React from 'react';\nimport './css/App.css';\nimport { Div } from \"atomize\";\n\n// route\nimport {\n    BrowserRouter as Router,\n    Route,\n    Redirect,\n    Switch\n} from \"react-router-dom\";\n\nimport Nav from \"./components/NavAnchor\";\nimport Home from \"./pages/Home\";\nimport Skins from \"./pages/Skins\";\n\nfunction App() {\n\n    const anchorList = [\n        { id: 0, name: \"홈\", link: \"/home\", type: \"link\" },\n        { id: 1, name: \"추천 스킨\", link: \"#recommend-skins\", type: \"hash\" },\n        { id: 2, name: \"챔피언 목록\", link: \"#champions\", type: \"hash\" },\n        { id: 3, name: \"새 페이지\", link: \"/skins\", type: \"new-tab\" },\n        { id: 4, name: \"스킨\", link: \"/skins\", type: \"link\" }\n    ];\n\n    return (<>\n        <Div className=\"main-background\" />\n        <header className=\"main-header\">\n            <Nav anchorList={anchorList} />\n        </header>\n\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\">\n                <Home />\n            </Route>\n            <Route path=\"/skins/:skinId\">\n                <Skins />\n            </Route>\n            <Route exect path=\"/skins\">\n                <p>skin page</p>\n            </Route>\n            <Route path=\"/\">\n                <p>404 error</p>\n            </Route>\n        </Switch>\n    </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Theme\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { ThemeProvider, StyleReset } from \"atomize\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst theme = {\n    colors: {\n        primary: 'tomato',\n        accent: 'yellow',\n    },\n};\n\nconst debug =\n    process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n    <React.StrictMode>\n        <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n            <ThemeProvider theme={theme}>\n                <StyleReset />\n                <Router>\n                    <App />\n                </Router>\n            </ThemeProvider>\n        </StyletronProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}