{"version":3,"sources":["components/Nav.js","components/Carousel.js","hooks/useDataFetch.js","components/RecommendCarousel.js","components/Modal.js","components/ChampBox.js","pages/Home.js","components/HistoryChart.js","components/Comment.js","components/CommentList.js","pages/Skins.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","anchorList","map","item","type","smooth","to","link","bg","hoverBg","cursor","rounded","name","id","href","target","rel","Carousel","list","flktyOption","cellOption","history","useHistory","useState","undefined","flkty","setFlkty","useEffect","on","event","pointer","cellElement","cellIndex","push","inside","className","m","x","xs","md","b","h","w","src","full_image_url","alt","title","p","trimmed_image_url","options","flickityRef","ref","dataFetchReducer","state","action","isLoading","isError","data","payload","Error","useDataFetch","initialUrl","initialData","url","setUrl","useReducer","dispatch","didCancel","a","axios","result","console","log","fetchData","RecommendCarousel","skinList","maxW","initialIndex","wrapAround","autoPlay","pageDots","SkinModal","props","isOpen","close","document","body","style","overflow","onClick","e","stopPropagation","size","color","children","ChampBox","champId","setId","champLoading","champError","champList","display","setDisplay","skinLoading","skinError","doFetch","items","icon_url","d","justify","flexWrap","cellAlign","contain","Home","setNav","align","flexDir","l","r","textSize","textAlign","HistoryChart","chartOption","chartLabel","chartData","chartRef","useRef","ctx","current","getContext","Chart","register","registerables","slice","chart","labels","datasets","fill","borderColor","backgroundColor","tension","destroy","Comment","skinId","commentId","comment","like","isLike","setIsLike","likeNum","setLikeNum","setLoading","handleClickLike","preventDefault","post","skin_id","comment_id","then","response","like_num","success","prev","catch","error","pos","y","minH","top","right","wordBreak","CommentList","setComment","marginBottom","onSubmit","value","onChange","placeholder","suffix","likes","element","Skins","params","useRouteMatch","skin","doSkinFetch","setLabel","setData","useMemo","responsive","maintainAspectRatio","scales","beginAtZero","stackWeight","ticks","plugins","legend","price_history","sort","date","sale_price","championSkinList","doChampionFetch","champion_id","bgImg","App","pathname","useLocation","window","scrollTo","setList","behavior","exact","path","exect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","StrictMode","debug","debugAfterHydration","theme","colors","primary","accent","getElementById"],"mappings":"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","file":"static/js/main.f5a082c6.chunk.js","sourcesContent":["import React from 'react';\nimport \"../css/Nav.css\";\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { Button } from \"atomize\";\n\nfunction Nav({ anchorList }) {\n\n    return (\n        <nav>\n            { anchorList.map((item) => {\n                if (item.type === \"hash\")\n                    return (\n                        <HashLink key={item.id}\n                            smooth\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </HashLink>\n                    );\n                else if (item.type === \"new-tab\")\n                    return (\n                        <a\n                            key={item.id}\n                            href={item.link}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </a>\n                    );\n                else \n                    return (\n                        <Link\n                            key={item.id}\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </Link>\n                    );\n            })}\n        </nav>\n    );\n}\n\nexport default Nav","import React, { useState, useEffect } from \"react\";\nimport Flickity from \"react-flickity-component\";\nimport { useHistory } from \"react-router-dom\";\nimport { Div } from \"atomize\";\nimport \"../css/flickity.css\";\nimport \"../css/Carousel.css\";\n\nfunction Carousel({ list, flktyOption, cellOption }) {\n    const history = useHistory();\n\n    // use flickity API\n    const [flkty, setFlkty] = useState(undefined);\n    const getFlickityRef = (ref) => {\n        setFlkty(ref);\n    }\n    useEffect(() => {\n        if (flkty !== undefined) {\n            /*\n            flkty.on('settle', () => {\n                console.log(`current index is ${flkty.selectedIndex}`)\n            });\n            */\n\n            flkty.on('staticClick', function (event, pointer, cellElement, cellIndex) {\n                if (!cellElement) {\n                    return;\n                }\n                history.push(`/skins/${cellElement.id}`);\n            });\n        }\n    }, [flkty, history]);\n\n\n    // carousel cell design\n    const inside = list.map((item) => {\n        if (cellOption.type === \"recommend-skins\") {\n            return (\n                <Div\n                    key={item.id}\n                    id={item.id}\n                    className=\"carousel-cell recommand shadowDiv\"\n                    m={{\n                        x: { xs: \"0.25rem\", md: \"1rem\" },\n                        b: \"2rem\"\n                    }}\n                    h={{ xs: \"210px\", md: \"350px\" }}\n                    w={{ xs: \"390px\", md: \"650px\" }}\n                >\n                    <img\n                        src={item.full_image_url}\n                        alt={item.name}\n                        title={item.name}\n                    />\n                </Div>\n            );\n        }\n        else if (cellOption.type === \"champion-skins\") {\n            return (\n                <Div\n                    key={item.id}\n                    id={item.id}\n                    p={{ x: \"1rem\" }}\n                >\n                    <Div\n                        className=\"carousel-cell champion-skin shadowDiv\"\n                        h={{ xs: \"336px\", md: \"336px\" }}\n                        w={{ xs: \"185px\", md: \"185px\" }}\n                        m={{ b: \"2rem\" }}\n                    >\n                        <img\n                            src={item.trimmed_image_url}\n                            alt={item.name}\n                            title={item.name}\n                        />\n                    </Div>\n                </Div>\n            );\n        }\n        else return (<></>);\n    });\n\n    return (\n        <Flickity\n            className=\"carousel\"\n            options={flktyOption}\n            flickityRef={getFlickityRef}\n        >\n            {inside}\n        </Flickity>\n    );\n}\n\nexport default Carousel;","import { useState, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\n\nfunction dataFetchReducer(state, action) {\n    switch (action.type) {\n        case \"FETCH_INIT\":\n            return {\n                ...state,\n                isLoading: true,\n                isError: false\n            };\n        case \"FETCH_SUCCESS\":\n            return {\n                isLoading: false,\n                isError: false,\n                data: action.payload\n            };\n        case \"FETCH_FAILURE\":\n            return {\n                ...state,\n                isLoading: false,\n                isError: true\n            };\n        default:\n            throw new Error();\n    }\n}\n\nfunction useDataFetch(initialUrl, initialData) {\n    const [url, setUrl] = useState(initialUrl);\n    const [state, dispatch] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isError: false,\n        data: initialData\n    });\n\n    useEffect(() => {\n        let didCancel = false;\n\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_INIT\" });\n\n            try {\n                const result = await axios(url);\n\n                if (!didCancel)\n                    dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n            } catch (error) {\n                if (!didCancel) {\n                    console.log(`error in data fetch about ${url}\\n`, error);\n                    dispatch({ type: \"FETCH_FAILURE\" });\n                }\n            }\n        };\n\n        if(url !== \"initialUrl\")\n            fetchData();\n\n        return () => {\n            didCancel = true;\n        };\n    }, [url]);\n\n    return [state, setUrl];\n}\n\nexport default useDataFetch;","import React from \"react\";\nimport { Div } from \"atomize\";\nimport Carousel from \"./Carousel\";\nimport useDataFetch from \"../hooks/useDataFetch\";\n\nfunction RecommendCarousel() {\n\n    const [{isLoading, isError, data : skinList}] = useDataFetch(\n        \"/api/recommendations\",\n        []\n    );\n    \n    const flickityOptions = {\n        initialIndex: 1,\n        wrapAround: true,\n        autoPlay: 3000,\n        pageDots: false,\n    };\n\n    return (<>{\n        isLoading ? <p> is loading... </p> :\n        isError ? <p> something error </p> :\n        <Div maxW=\"100%\">\n            <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"recommend-skins\" }} />\n        </Div>\n    }</>);\n}\n\nexport default RecommendCarousel;","import React, { useEffect } from \"react\";\nimport { Button, Icon } from \"atomize\";\nimport \"../css/Modal.css\";\n\nfunction SkinModal(props) {\n    const { isOpen, close } = props;\n\n    // lock scrolling behind\n    useEffect(() => {\n        if (isOpen) document.body.style.overflow = \"hidden\";\n        else document.body.style.overflow = \"unset\";\n\n        return () => {\n            document.body.style.overflow = \"unset\";\n        }\n    }, [isOpen]);\n\n    const className = (props.className || \"\") + \" modal\" + (isOpen ? \" openModal\" : \"\");\n    /* silde in out css */\n    return (<>\n        <div className={className}\n            onClick={close}\n        >\n            <section\n                onClick={(e)=>{e.stopPropagation();}}\n            >\n                <Button\n                    h=\"2.5rem\"\n                    w=\"2.5rem\"\n                    bg=\"info700\"\n                    hoverBg=\"info800\"\n                    rounded=\"lg\"\n                    onClick={close}\n                >\n                    <Icon name=\"Cross\" size=\"20px\" color=\"white\" />\n                </Button>\n                {props.children}\n            </section>\n        </div>\n    </>);\n}\n\nexport default SkinModal;","import React, { useState, useEffect } from \"react\";\nimport { Div } from \"atomize\";\n\nimport Carousel from \"../components/Carousel\";\nimport Modal from \"../components/Modal\";\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport \"../css/ChampBox.css\";\n\nfunction ChampBox() {\n    const [champId, setId] = useState(0);\n    const [{ isLoading: champLoading, isError: champError, data: champList }] = useDataFetch(\"/api/champions\", []);\n\n    const [display, setDisplay] = useState(false);\n    const [{ isLoading: skinLoading, isError: skinError, data: skinList }, doFetch] = useDataFetch(\"initialUrl\", []);\n    useEffect(() => {\n        if (display)\n            doFetch(`/api/champions/${champId}/skins`);\n    }, [display, champId, doFetch]);\n    const flickityOptions = {\n        initialIndex: 0,\n        cellAlign: \"left\",\n        contain: true,\n        pageDots: false,\n        //wrapAround: true,\n        //autoPlay: 3000,\n    };\n\n    const items = champList.map((item) =>\n        <Div\n            key={item.id}\n            p=\"0.5rem\"\n        >\n            <img className=\"champion-icon\"\n                src={item.icon_url}\n                alt={item.name}\n                title={item.name}\n                onClick={() => {\n                    setId(item.id);\n                    setDisplay(true);\n                }}\n            />\n        </Div>\n    );\n\n    return (<>\n        <Div\n            d=\"flex\"\n            justify=\"space-evenly\"\n            flexWrap=\"wrap\"\n            p=\"0.5rem\"\n        >\n            {\n                champLoading ? <p> is loading... </p> :\n                champError ? <p> something error </p> :\n                items\n            }\n        </Div>\n\n        <Modal className=\"skins\" isOpen={display} close={() => setDisplay(false)}>\n            {\n                skinLoading ? <p> is loading... </p> :\n                skinError ? <p> something error </p> :\n                <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n            }\n        </Modal>\n    </>);\n}\n\nexport default ChampBox;","import React, { useEffect } from \"react\";\nimport { Div, Text } from \"atomize\";\n\nimport RecommendCarousel from \"../components/RecommendCarousel\";\nimport ChampBox from \"../components/ChampBox\";\n\nfunction Home({ setNav }) {\n    // header navigation tab\n    useEffect(() => {\n        setNav([\n            { id: 0, name: \"홈\", link: \"/home\", type: \"link\" },\n            { id: 1, name: \"추천 스킨\", link: \"#recommend-skins\", type: \"hash\" },\n            { id: 2, name: \"챔피언 목록\", link: \"#champions\", type: \"hash\" },\n            { id: 3, name: \"새 페이지 테스트\", link: \"/skins\", type: \"new-tab\" }\n        ]);\n    }, [setNav]);\n\n    return (<>\n        <Div /* title */\n            d=\"flex\"\n            h={{ xs: \"150px\", md: \"400px\" }}\n            align=\"center\"\n            justify=\"center\"\n            flexDir=\"column\"\n        >\n            <Text\n                p={{ l: \"0.5rem\", r: \"0.5rem\" }}\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                LOL PRICE TRACKER\n            </Text>\n        </Div>\n\n        <div className=\"content-container home\"/* main content */ >\n            <div className=\"content-background\" /* background */ />\n\n            <div className=\"hash-link\" id=\"recommend-skins\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Recommend Skins\n                </Text>\n            </div>\n            <RecommendCarousel />\n\n            <div className=\"hash-link\" id=\"champions\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Champion List\n                </Text>\n            </div>\n            <ChampBox />\n            {/*}\n            <Div\n                h=\"1000px\"\n                bg=\"brown\"\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                Dummy\n            </Div>\n            {/*\n            <div className=\"App-header\">\n                <img src=\"/images/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </div>\n            */}\n        </div>\n    </>);\n}\n\nexport default Home;","import React, { useEffect, useRef } from \"react\";\nimport { Chart, registerables } from 'chart.js';\n\nfunction HistoryChart({ className, chartOption, chartLabel, chartData }) {\n    const chartRef = useRef(null);\n    useEffect(() => {\n        const ctx = chartRef.current.getContext(\"2d\");\n        Chart.register(...registerables);\n        let data = chartData.slice();\n\n        const chart = new Chart(ctx, {\n            type: \"line\",\n            data: {\n                labels: chartLabel,\n                datasets: [{\n                    data: data,\n                    fill: false,\n                    borderColor: \"green\",\n                    backgroundColor: \"rgb(0,0,0,1)\",\n                    tension: 0\n                }]\n            },\n            options: chartOption\n        });\n        console.log(\"chart generated\");\n\n        return () => {\n            chart.destroy();\n            console.log(\"chart destroy...\");\n        };\n    }, [chartOption, chartLabel, chartData]);\n\n    return (\n        <div className={(className || \"\") + \" chart-container\"}>\n            <canvas ref={chartRef}></canvas>\n        </div>\n    );\n}\n\nexport default HistoryChart;","import React, { useState } from \"react\";\nimport { Div, Icon } from \"atomize\";\nimport axios from \"axios\";\nimport \"../css/Comment.css\";\n\nfunction Comment({ skinId, commentId, comment, like }) {\n    const [isLike, setIsLike] = useState(false);\n    const [likeNum, setLikeNum] = useState(like);\n    const [isLoading, setLoading] = useState(false);\n    \n    const handleClickLike = async (event) => {\n        event.preventDefault();\n        if (isLoading) return;\n        \n        setLoading(true);\n\n        await axios.post(`/dummy/url`, {\n            title: (isLike ? \"Like\" : \"disLike\"),\n            body: {\n                skin_id: skinId,\n                comment_id: commentId\n            }\n        }).then((response) => {\n            console.log(response);\n            const {comment_id, like_num, success} = response.data;\n            \n            // dummy code! start \n            setIsLike((prev)=>!prev);\n            if(isLike) setLikeNum((prev)=> prev-1);\n            else setLikeNum((prev)=> prev+1);\n            // dummy code! end\n            \n            if(success && comment_id === commentId) {\n                setIsLike((prev)=>!prev);\n                setLikeNum(like_num);\n            }\n        }).catch((error) => {\n            console.log(`error in comment_id:${commentId}, skin_id:${skinId}\\n`, error);\n        });\n        \n        setLoading(false);\n    };\n\n\n    return (\n        <Div\n            className=\"comment shadowDiv\"\n            pos=\"relative\"\n            m={{y:\"0.5rem\"}}\n            p=\"1rem\"\n            bg=\"white\"\n            minH=\"3rem\"\n            rounded=\"md\"\n        >\n            <Div\n                pos=\"absolute\"\n                top=\"1rem\"\n                right=\"1rem\"\n            >\n                {likeNum}\n                <Icon onClick={handleClickLike} name={isLike ? \"HeartSolid\" : \"Heart\"} size=\"20px\" color=\"info700\" />\n            </Div>\n            <Div\n                p={{r:\"4rem\"}}\n                style={{\n                    wordBreak: \"break-all\"\n                }}\n            >\n                {comment}\n            </Div>\n        </Div>\n    );\n}\n\nexport default Comment;","import React, { useState } from \"react\";\nimport { Input, Button } from \"atomize\";\n\nimport Comment from \"../components/Comment\";\n//import useDataFetch from \"../hooks/useDataFetch\";\n\nfunction CommentList({ skinId }) {\n    //const [{ isLoading, isError, data: comments }, doFetch] = useDataFetch(\"initialUrl\", []);\n    /** /api/skins/:skinId/comments 에서 comment list가 넘어온다고 가정 */\n    \n    const dummyComments = [\n        { id: 0, comment: \"test comment!\", likes: 38 },\n        { id: 1, comment: \"awesome skin!\", likes: 37 },\n        { id: 2, comment: \"bads...\", likes: 102 },\n        { id: 3, comment: \"like please!\", likes: 33 },\n        { id: 4, comment: \"test comment!\", likes: 2 },\n        { id: 5, comment: \"test comment!\", likes: 10 },\n        { id: 6, comment: \"test comment!\", likes: 0 },\n        { id: 7, comment: `test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! test long comment! \\\n            test long comment! test long comment! test `, likes: 1 },\n    ];\n\n    // form state\n    const [comment, setComment] = useState(\"\");\n    const handleCommentChange = (event) => {\n        setComment(event.target.value);\n    };\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        if (comment !== \"\") {\n            console.log(\"sample/url\", { comment: comment });\n            setComment(\"\");\n        }\n        else {\n            console.log(\"empty comment\");\n        }\n    };\n\n    return (<>\n        <form\n            style={{\n                marginBottom: \"0.5rem\"\n            }}\n            onSubmit={handleSubmit}\n        >\n            <Input className=\"shadowDiv\"\n                type=\"text\"\n                value={comment}\n                onChange={handleCommentChange}\n                placeholder=\"comment here!\"\n                p={{ l: \"1rem\", r: \"6rem\" }}\n                suffix={\n                    <Button\n                        pos=\"absolute\"\n                        type=\"submit\"\n                        bg=\"info700\"\n                        hoverBg=\"info800\"\n                        top=\"0\"\n                        right=\"0\"\n                        rounded={{ r: \"md\" }}\n                    >\n                        Submit\n                    </Button>\n                }\n            />\n        </form>\n\n        {dummyComments.map(element =>\n            <Comment key={element.id} skinId={skinId} commentId={element.id} comment={element.comment} like={element.likes} />\n        )}\n    </>);\n}\n\nexport default CommentList;","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Div, Text } from \"atomize\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport Carousel from \"../components/Carousel\";\nimport HistoryChart from \"../components/HistoryChart\";\nimport CommentList from \"../components/CommentList\";\n\n\n/**\n * \n * page for skin information\n * url : /skins/:skinId\n * \n */\n\nfunction Skins({ setNav }) {\n    const { params } = useRouteMatch(\"/skins/:skinId\");\n\n    // header navigation tab\n    useEffect(() => {\n        setNav([\n            { id: 0, name: \"홈\", link: \"/home\", type: \"link\" },\n            { id: 1, name: \"가격 그래프\", link: \"#chart\", type: \"hash\" },\n            { id: 2, name: \"다른 스킨들\", link: \"#champions\", type: \"hash\" },\n            { id: 3, name: \"댓글\", link: \"#comments\", type: \"hash\" }\n        ]);\n    }, [setNav]);\n\n\n    // skin data fetch\n    const [{ data: skin }, doSkinFetch] = useDataFetch(\n        `/api/skins/${params.skinId}`,\n        {}\n    );\n\n\n    // update when skin id changed\n    useEffect(() => {\n        doSkinFetch(`/api/skins/${params.skinId}`);\n    }, [params, doSkinFetch]);\n\n\n    //generate chart data\n    const [chartLabel, setLabel] = useState([]);\n    const [chartData, setData] = useState([]);\n    const chartOption = useMemo(() => {\n        return {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n                y: {\n                    beginAtZero: true,\n                    stackWeight: 1,\n                    ticks: {\n                        color: \"black\"\n                    }\n                },\n                x: {\n                    ticks: {\n                        color: \"black\"\n                    }\n                }\n            },\n            plugins: {\n                legend: false\n            }\n        };\n    }, []);\n    useEffect(() => {\n        const history = skin.price_history || [];\n\n        history.sort((a,b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0);\n        setLabel(history.map(item => item.date));\n        setData(history.map(item => item.sale_price));\n    }, [skin]);\n\n\n    // skin list of champion\n    const [{ data: championSkinList }, doChampionFetch] = useDataFetch(\"initialUrl\", []);\n    const flickityOptions = {\n            initialIndex: 0,\n            cellAlign: \"left\",\n            contain: true,\n            pageDots: false,\n            //wrapAround: true,\n            //autoPlay: 3000,\n    };\n    useEffect(() => {\n        if (skin.champion_id !== undefined) {\n            doChampionFetch(`/api/champions/${skin.champion_id}/skins`);\n        }\n    }, [skin, doChampionFetch]);\n\n\n    return (<>\n        <Div className=\"background-skin\" bgImg={skin.full_image_url} />\n\n        <Div p=\"200px\"></Div>\n\n        <div className=\"content-container skins\" /* main content */ >\n            <div className=\"content-background\" />\n\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    {skin.name === \"default\" ? \"기본 스킨\" : skin.name}\n                </Text>\n            </div>\n\n\n            {skin.name === \"default\" ? null :\n                <>\n                    <div className=\"hash-link\" id=\"chart\" />\n                    <Div p={{\n                        x: \"1rem\",\n                        b: \"2rem\"\n                    }}>\n                        <HistoryChart className=\"shadowDiv\" chartOption={chartOption} chartLabel={chartLabel} chartData={chartData} />\n                    </Div>\n                </>\n            }\n\n\n            <div className=\"hash-link\" id=\"champions\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    챔피언의 다른 스킨들\n                </Text>\n            </div>\n            <Carousel list={championSkinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n\n            <div className=\"hash-link\" id=\"comments\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Comments\n                </Text>\n            </div>\n            <Div p={{ x: \"1rem\" }}>\n                <CommentList skinId={params.skinId} />\n            </Div>\n        </div>\n    </>);\n}\n\nexport default Skins;","import React, { useState, useEffect } from \"react\";\nimport { Button, Icon } from \"atomize\";\nimport \"./css/App.css\";\n\n// route\nimport {\n    Route,\n    Redirect,\n    Switch,\n    useLocation\n} from \"react-router-dom\";\n\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Skins from \"./pages/Skins\";\n\nfunction App() {\n    // scroll top when page changed\n    const { pathname } = useLocation();\n    useEffect(() => {\n        console.log(`move to \"${pathname}\"`)\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    const [anchorList, setList] = useState([]);\n    \n    const handleTop= () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    return (<>\n        <header className=\"main-header\">\n            <Nav anchorList={anchorList} />\n        </header>\n\n        <Button className=\"go-to-top\"\n            h=\"2.5rem\"\n            w=\"2.5rem\"\n            bg=\"info300\"\n            hoverBg=\"info400\"\n            rounded=\"lg\"\n            m={{ r: \"1rem\" }}\n            onClick={handleTop}\n        >\n            <Icon name=\"UpArrow\" size=\"20px\" color=\"info700\" />\n        </Button>\n\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\">\n                <Home setNav={setList} />\n            </Route>\n            <Route exact path=\"/skins/:skinId\">\n                <Skins setNav={setList} />\n            </Route>\n            <Route exect path=\"/skins\">\n                <p>skin page</p>\n            </Route>\n            <Route path=\"/\">\n                <p>404 error</p>\n            </Route>\n        </Switch>\n    </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Theme\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { ThemeProvider, StyleReset } from \"atomize\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst theme = {\n    colors: {\n        primary: 'tomato',\n        accent: 'yellow',\n    },\n};\n\nconst debug =\n    process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n    <React.StrictMode>\n        <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n            <ThemeProvider theme={theme}>\n                <StyleReset />\n                <Router>\n                    <App />\n                </Router>\n            </ThemeProvider>\n        </StyletronProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}