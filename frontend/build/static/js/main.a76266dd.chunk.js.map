{"version":3,"sources":["components/Nav.js","components/Carousel.js","hooks/useDataFetch.js","components/RecommendCarousel.js","components/Modal.js","components/ChampBox.js","pages/Home.js","components/HistoryChart.js","pages/Skins.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","anchorList","map","item","type","smooth","to","link","bg","hoverBg","cursor","rounded","name","id","href","target","Carousel","list","flktyOption","cellOption","history","useHistory","useState","undefined","flkty","setFlkty","useEffect","on","event","pointer","cellElement","cellIndex","push","inside","className","m","r","xs","md","l","b","h","w","src","full_image_url","alt","title","p","trimmed_image_url","options","flickityRef","ref","dataFetchReducer","state","action","isLoading","isError","data","payload","Error","useDataFetch","initialUrl","initialData","url","setUrl","useReducer","dispatch","didCancel","a","axios","result","fetchData","RecommendCarousel","skinList","maxW","initialIndex","wrapAround","autoPlay","pageDots","SkinModal","props","isOpen","close","document","body","style","overflow","onClick","size","color","children","ChampBox","champId","setId","champLoading","champError","champList","display","setDisplay","skinLoading","skinError","doFetch","items","icon_url","d","justify","flexWrap","cellAlign","contain","Home","setNav","align","flexDir","textSize","textAlign","HistoryChart","option","labels","chartRef","useRef","ctx","current","getContext","Chart","register","registerables","chart","datasets","label","fill","borderColor","backgroundColor","tension","console","log","destroy","x","Skins","params","useRouteMatch","skinId","skin","doSkinFetch","chartLabels","setLabel","chartData","setData","price_history","sort","date","price","championSkinList","doChampionFetch","champion_id","bgImg","responsive","maintainAspectRatio","scales","y","beginAtZero","stackWeight","ticks","plugins","legend","App","pathname","useLocation","window","scrollTo","setList","top","behavior","exact","path","exect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","StrictMode","value","debug","debugAfterHydration","theme","colors","primary","accent","getElementById"],"mappings":"8SAkEeA,MA5Df,YAA8B,IAAfC,EAAc,EAAdA,WAEX,OACI,8BACMA,EAAWC,KAAI,SAACC,GACd,MAAkB,SAAdA,EAAKC,KAED,cAAC,IAAD,CACIC,QAAM,EACNC,GAAIH,EAAKI,KAFb,SAII,cAAC,SAAD,CACIC,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QAVCT,EAAKU,IAcL,YAAdV,EAAKC,KAEN,cAAC,SAAD,CAEIU,KAAMX,EAAKI,KACXQ,OAAO,SAHX,SAKI,cAAC,SAAD,CACIP,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QAVLT,EAAKU,IAgBd,cAAC,IAAD,CAEIP,GAAIH,EAAKI,KAFb,SAII,cAAC,SAAD,CACIC,GAAG,UACHC,QAAQ,UACRC,OAAO,UACPC,QAAQ,KAJZ,SAMKR,EAAKS,QATLT,EAAKU,U,+BCiDvBG,MAzFf,YAAsD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,WAC7BC,EAAUC,cADiC,EAIvBC,wBAASC,GAJc,mBAI1CC,EAJ0C,KAInCC,EAJmC,KAQjDC,qBAAU,gBACQH,IAAVC,GAOAA,EAAMG,GAAG,eAAe,SAAUC,EAAOC,EAASC,EAAaC,GACtDD,GAGLV,EAAQY,KAAR,iBAAuBF,EAAYjB,UAG5C,CAACW,EAAOJ,IAIX,IAAMa,EAAShB,EAAKf,KAAI,SAACC,GACrB,MAAwB,oBAApBgB,EAAWf,KAEP,cAAC,MAAD,CAEIS,GAAIV,EAAKU,GACTqB,UAAU,oCACVC,EAAG,CACCC,EAAG,CAAEC,GAAI,UAAWC,GAAI,QACxBC,EAAG,CAAEF,GAAI,UAAWC,GAAI,QACxBE,EAAG,QAEPC,EAAG,CAAEJ,GAAI,QAASC,GAAI,SACtBI,EAAG,CAAEL,GAAI,QAASC,GAAI,SAV1B,SAYI,qBACIK,IAAKxC,EAAKyC,eACVC,IAAK1C,EAAKS,KACVkC,MAAO3C,EAAKS,QAdXT,EAAKU,IAmBO,mBAApBM,EAAWf,KAEZ,cAAC,MAAD,CAEIS,GAAIV,EAAKU,GACTkC,EAAG,CACCX,EAAG,CAAEC,GAAI,UAAWC,GAAI,QACxBC,EAAG,CAAEF,GAAI,UAAWC,GAAI,SALhC,SAQI,cAAC,MAAD,CACIJ,UAAU,wCACVO,EAAG,CAAEJ,GAAI,QAASC,GAAI,SACtBI,EAAG,CAAEL,GAAI,QAASC,GAAI,SACtBH,EAAG,CAAEK,EAAG,QAJZ,SAMI,qBACIG,IAAKxC,EAAK6C,kBACVH,IAAK1C,EAAKS,KACVkC,MAAO3C,EAAKS,UAhBfT,EAAKU,IAsBT,gCAGjB,OACI,cAAC,IAAD,CACIqB,UAAU,WACVe,QAAS/B,EACTgC,YA7Ee,SAACC,GACpB1B,EAAS0B,IAyET,SAKKlB,K,kDCxFb,SAASmB,EAAiBC,EAAOC,GAC7B,OAAQA,EAAOlD,MACX,IAAK,aACD,OAAO,2BACAiD,GADP,IAEIE,WAAW,EACXC,SAAS,IAEjB,IAAK,gBACD,MAAO,CACHD,WAAW,EACXC,SAAS,EACTC,KAAMH,EAAOI,SAErB,IAAK,gBACD,OAAO,2BACAL,GADP,IAEIE,WAAW,EACXC,SAAS,IAEjB,QACI,MAAM,IAAIG,OAwCPC,MApCf,SAAsBC,EAAYC,GAAc,IAAD,EACrBxC,mBAASuC,GADY,mBACpCE,EADoC,KAC/BC,EAD+B,OAEjBC,qBAAWb,EAAkB,CACnDG,WAAW,EACXC,SAAS,EACTC,KAAMK,IALiC,mBAEpCT,EAFoC,KAE7Ba,EAF6B,KAiC3C,OAzBAxC,qBAAU,WACN,IAAIyC,GAAY,EAmBhB,MAHW,eAARJ,GAdY,uCAAG,4BAAAK,EAAA,6DACdF,EAAS,CAAE9D,KAAM,eADH,kBAIWiE,IAAMN,GAJjB,OAIJO,EAJI,OAMLH,GACDD,EAAS,CAAE9D,KAAM,gBAAiBsD,QAASY,EAAOb,OAP5C,gDASLU,GACDD,EAAS,CAAE9D,KAAM,kBAVX,yDAAH,oDAeXmE,GAEG,WACHJ,GAAY,KAEjB,CAACJ,IAEG,CAACV,EAAOW,ICjCJQ,MAvBf,WAA8B,IAAD,EAEuBZ,EAC5C,uBACA,IAJqB,sBAEjBL,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,QAAgBiB,EAFV,EAEGhB,KAY5B,OAAQ,mCACJF,EAAY,gDACZC,EAAU,kDACV,cAAC,MAAD,CAAKkB,KAAK,OAAV,SACI,cAAC,EAAD,CAAUzD,KAAMwD,EAAUvD,YAXV,CACpByD,aAAc,EACdC,YAAY,EACZC,SAAU,IACVC,UAAU,GAOkD3D,WAAY,CAAEf,KAAM,0B,OCezE2E,MAlCf,SAAmBC,GAAQ,IACfC,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,MAGhBxD,qBAAU,WAIN,OAHYyD,SAASC,KAAKC,MAAMC,SAA5BL,EAAuC,SACP,QAE7B,WACHE,SAASC,KAAKC,MAAMC,SAAW,WAEpC,CAACL,IAEJ,IAAM/C,GAAa8C,EAAM9C,WAAa,IAAM,UAAY+C,EAAS,aAAe,IAEhF,OAAQ,mCACJ,qBAAK/C,UAAWA,EAAhB,SACI,oCACI,cAAC,SAAD,CACIO,EAAE,SACFC,EAAE,SACFlC,GAAG,UACHC,QAAQ,UACRE,QAAQ,KACR4E,QAASL,EANb,SAQI,cAAC,OAAD,CAAMtE,KAAK,QAAQ4E,KAAK,OAAOC,MAAM,YAExCT,EAAMU,iB,OCoCRC,MA5Df,WAAqB,IAAD,EACSrE,mBAAS,GADlB,mBACTsE,EADS,KACAC,EADA,OAE4DjC,EAAa,iBAAkB,IAF3F,sBAEIkC,EAFJ,EAEPvC,UAAkCwC,EAF3B,EAEkBvC,QAA2BwC,EAF7C,EAEuCvC,KAFvC,EAIcnC,oBAAS,GAJvB,mBAIT2E,EAJS,KAIAC,EAJA,OAKkEtC,EAAa,aAAc,IAL7F,0BAKIuC,EALJ,EAKP5C,UAAiC6C,EAL1B,EAKiB5C,QAA0BiB,EAL3C,EAKqChB,KAAkB4C,EALvD,KAMhB3E,qBAAU,WACFuE,GACAI,EAAQ,kBAAD,OAAmBT,EAAnB,aACZ,CAACK,EAASL,EAASS,IACtB,IASMC,EAAQN,EAAU9F,KAAI,SAACC,GAAD,OACxB,cAAC,MAAD,CAEI4C,EAAE,SAFN,SAII,qBAAKb,UAAU,gBACXS,IAAKxC,EAAKoG,SACV1D,IAAK1C,EAAKS,KACVkC,MAAO3C,EAAKS,KACZ2E,QAAS,WACLM,EAAM1F,EAAKU,IACXqF,GAAW,OATd/F,EAAKU,OAelB,OAAQ,qCACJ,cAAC,MAAD,CACI2F,EAAE,OACFC,QAAQ,eACRC,SAAS,OACT3D,EAAE,SAJN,SAOQ+C,EAAe,gDACfC,EAAa,kDACbO,IAIR,cAAC,EAAD,CAAOpE,UAAU,QAAQ+C,OAAQgB,EAASf,MAAO,kBAAMgB,GAAW,IAAlE,SAEQC,EAAc,gDACdC,EAAY,kDACZ,cAAC,EAAD,CAAUnF,KAAMwD,EAAUvD,YA5Cd,CACpByD,aAAc,EACdgC,UAAW,OACXC,SAAS,EACT9B,UAAU,GAwCsD3D,WAAY,CAAEf,KAAM,0BCuB7EyG,MA/Ef,YAA2B,IAAXC,EAAU,EAAVA,OAWZ,OATApF,qBAAU,WACNoF,EAAO,CACH,CAAEjG,GAAI,EAAGD,KAAM,SAAKL,KAAM,QAASH,KAAM,QACzC,CAAES,GAAI,EAAGD,KAAM,4BAASL,KAAM,mBAAoBH,KAAM,QACxD,CAAES,GAAI,EAAGD,KAAM,kCAAUL,KAAM,aAAcH,KAAM,QACnD,CAAES,GAAI,EAAGD,KAAM,+CAAaL,KAAM,SAAUH,KAAM,eAEvD,CAAC0G,IAEI,qCACJ,cAAC,MAAD,CACIN,EAAE,OACF/D,EAAG,CAAEJ,GAAI,QAASC,GAAI,SACtByE,MAAM,SACNN,QAAQ,SACRO,QAAQ,SALZ,SAOI,cAAC,OAAD,CACIjE,EAAG,CAAER,EAAG,SAAUH,EAAG,UACrB6E,SAAS,WACTC,UAAU,SAHd,iCASJ,sBAAKhF,UAAU,yBAAf,UACI,qBAAKA,UAAU,uBAEf,qBAAKA,UAAU,YAAYrB,GAAG,oBAC9B,qBAAKqB,UAAU,gBAAf,SACI,cAAC,OAAD,CACI+E,SAAU,CAAE5E,GAAI,OAAQC,GAAI,UADhC,+BAMJ,cAAC,EAAD,IAEA,qBAAKJ,UAAU,YAAYrB,GAAG,cAC9B,qBAAKqB,UAAU,gBAAf,SACI,cAAC,OAAD,CACI+E,SAAU,CAAE5E,GAAI,OAAQC,GAAI,UADhC,6BAMJ,cAAC,EAAD,W,eCXG6E,MAxCf,YAAiD,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,OAAQ5D,EAAQ,EAARA,KAE9B6D,EAAWC,iBAAO,MA6BxB,OA5BA7F,qBAAU,WACN,IAAM8F,EAAMF,EAASG,QAAQC,WAAW,MACxCC,IAAMC,SAAN,MAAAD,IAAK,YAAaE,MAGlB,IAAMC,EAAQ,IAAIH,IAAMH,EAAK,CACzBpH,KAAM,OACNqD,KAAM,CACF4D,OAAQA,EACRU,SAAU,CAAC,CACPC,MAAO,mBACPvE,KAAMA,EACNwE,MAAM,EACNC,YAAa,QACbC,gBAAiB,eACjBC,QAAS,KAGjBnF,QAASmE,IAIb,OAFAiB,QAAQC,IAAI,mBAEL,WACHD,QAAQC,IAAI,oBACZR,EAAMS,aAEX,CAACnB,EAAQC,EAAQ5D,IAGhB,cAAC,MAAD,CAAKV,EAAG,CAACyF,EAAG,QAAZ,SACI,qBAAKtG,UAAU,4BAAf,SACI,wBAAQiB,IAAKmE,SC6FdmB,MAnHf,YAA4B,IAAX3B,EAAU,EAAVA,OACL4B,EAAWC,YAAc,kBAAzBD,OAGRhH,qBAAU,WACNoF,EAAO,CACH,CAAEjG,GAAI,EAAGD,KAAM,SAAKL,KAAM,QAASH,KAAM,QACzC,CAAES,GAAI,EAAGD,KAAM,kCAAUL,KAAM,SAAUH,KAAM,QAC/C,CAAES,GAAI,EAAGD,KAAM,kCAAUL,KAAM,aAAcH,KAAM,YAExD,CAAC0G,IAVmB,MAaelD,EAAa,cAAD,OAChC8E,EAAOE,QACrB,IAfmB,mBAaRC,EAbQ,KAadpF,KAAcqF,EAbA,KAoBvBpH,qBAAU,WACNoH,EAAY,cAAD,OAAeJ,EAAOE,WAClC,CAACF,EAAQI,IAtBW,MA0BSxH,mBAAS,IA1BlB,mBA0BhByH,EA1BgB,KA0BHC,EA1BG,OA2BM1H,mBAAS,IA3Bf,mBA2BhB2H,EA3BgB,KA2BLC,EA3BK,KAiDvBxH,qBAAU,WACN,IAAMN,EAAUyH,EAAKM,eAAiB,GAEtC/H,EAAQgI,OACRJ,EAAS5H,EAAQlB,KAAI,SAAAC,GAAI,OAAIA,EAAKkJ,SAClCH,EAAQ9H,EAAQlB,KAAI,SAAAC,GAAI,OAAIA,EAAKmJ,YAClC,CAACT,IAvDmB,MA2D+BjF,EAAa,aAAc,IA3D1D,mBA2DR2F,EA3DQ,KA2Dd9F,KAA0B+F,EA3DZ,KA2EvB,OAPA9H,qBAAU,gBACmBH,IAArBsH,EAAKY,aACLD,EAAgB,kBAAD,OAAmBX,EAAKY,YAAxB,aAEpB,CAACZ,EAAMW,IAGF,qCACJ,cAAC,MAAD,CAAKtH,UAAU,kBAAkBwH,MAAOb,EAAKjG,iBAE7C,cAAC,MAAD,CAAKG,EAAE,UAEP,sBAAKb,UAAU,0BAAf,UACI,qBAAKA,UAAU,uBAEf,qBAAKA,UAAU,gBAAf,SACI,cAAC,OAAD,CACI+E,SAAU,CAAE5E,GAAI,OAAQC,GAAI,UADhC,SAGmB,YAAduG,EAAKjI,KAAqB,4BAAUiI,EAAKjI,SAInC,YAAdiI,EAAKjI,KAAqB,KACvB,qCACI,qBAAKsB,UAAU,YAAYrB,GAAG,UAC9B,cAAC,EAAD,CAAcuG,OAlEV,CAChBuC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACJC,EAAG,CACCC,aAAa,EACbC,YAAa,EACbC,MAAO,CACHxE,MAAO,UAGf+C,EAAG,CACCyB,MAAO,CACHxE,MAAO,WAInByE,QAAS,CACLC,QAAQ,IAgDmC9C,OAAQ0B,EAAatF,KAAMwF,OAItE,qBAAK/G,UAAU,YAAYrB,GAAG,cAC9B,qBAAKqB,UAAU,gBAAf,SACI,cAAC,OAAD,CACI+E,SAAU,CAAE5E,GAAI,OAAQC,GAAI,UADhC,wEAMJ,cAAC,MAAD,CACIS,EAAG,CAAE+G,EAAG,QADZ,SAGI,cAAC,EAAD,CAAU7I,KAAMsI,EAAkBrI,YAjDtB,CACpByD,aAAc,EACdgC,UAAW,OACXC,SAAS,EACT9B,UAAU,GA6C8D3D,WAAY,CAAEf,KAAM,6BCvDrFgK,MAtDf,WAAe,IAEHC,EAAaC,cAAbD,SACR3I,qBAAU,WACN2G,QAAQC,IAAR,mBAAwB+B,EAAxB,MACAE,OAAOC,SAAS,EAAG,KACpB,CAACH,IANO,MAQmB/I,mBAAS,IAR5B,mBAQJrB,EARI,KAQQwK,EARR,KAiBX,OAAQ,qCACJ,wBAAQvI,UAAU,cAAlB,SACI,cAAC,EAAD,CAAKjC,WAAYA,MAGrB,cAAC,SAAD,CAAQiC,UAAU,YACdO,EAAE,SACFC,EAAE,SACFlC,GAAG,UACHC,QAAQ,UACRE,QAAQ,KACRwB,EAAG,CAAEC,EAAG,QACRmD,QAnBS,WACbgF,OAAOC,SAAS,CACZE,IAAK,EACLC,SAAU,YASd,SASI,cAAC,OAAD,CAAM/J,KAAK,UAAU4E,KAAK,OAAOC,MAAM,cAG3C,eAAC,IAAD,WACI,cAAC,IAAD,CAAOmF,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,IAAD,CAAUvK,GAAG,YAEjB,cAAC,IAAD,CAAOsK,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,EAAD,CAAM/D,OAAQ2D,MAElB,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,iBAAlB,SACI,cAAC,EAAD,CAAO/D,OAAQ2D,MAEnB,cAAC,IAAD,CAAOK,OAAK,EAACD,KAAK,SAAlB,SACI,4CAEJ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACI,mDCpDDE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCgBRQ,EAAS,I,MAAIC,GAInBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,WAAD,CAAmBC,MAAOL,EAAQM,MATE,UASYC,qBAAmB,EAAnE,SACI,eAAC,gBAAD,CAAeC,MAlBb,CACVC,OAAQ,CACJC,QAAS,SACTC,OAAQ,WAeJ,UACI,cAAC,aAAD,IACA,cAAC,IAAD,UACI,cAAC,EAAD,aAKhBhH,SAASiH,eAAe,SAM5BrB,K","file":"static/js/main.a76266dd.chunk.js","sourcesContent":["import React from 'react';\nimport \"../css/Nav.css\";\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { Button, Anchor } from \"atomize\";\n\nfunction Nav({ anchorList }) {\n\n    return (\n        <nav>\n            { anchorList.map((item) => {\n                if (item.type === \"hash\")\n                    return (\n                        <HashLink key={item.id}\n                            smooth\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </HashLink>\n                    );\n                else if (item.type === \"new-tab\")\n                    return (\n                        <Anchor\n                            key={item.id}\n                            href={item.link}\n                            target=\"_blank\"\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </Anchor>\n                    );\n                else \n                    return (\n                        <Link\n                            key={item.id}\n                            to={item.link}\n                        >\n                            <Button\n                                bg=\"info700\"\n                                hoverBg=\"info600\"\n                                cursor=\"pointer\"\n                                rounded=\"md\"\n                            >\n                                {item.name}\n                            </Button>\n                        </Link>\n                    );\n            }\n            )}\n        </nav>\n    );\n}\n\nexport default Nav","import React, { useState, useEffect } from \"react\";\nimport Flickity from \"react-flickity-component\";\nimport { useHistory } from \"react-router-dom\";\nimport { Div } from \"atomize\";\nimport \"../css/flickity.css\";\nimport \"../css/Carousel.css\";\n\nfunction Carousel({ list, flktyOption, cellOption }) {\n    const history = useHistory();\n\n    // use flickity API\n    const [flkty, setFlkty] = useState(undefined);\n    const getFlickityRef = (ref) => {\n        setFlkty(ref);\n    }\n    useEffect(() => {\n        if (flkty !== undefined) {\n            /*\n            flkty.on('settle', () => {\n                console.log(`current index is ${flkty.selectedIndex}`)\n            });\n            */\n\n            flkty.on('staticClick', function (event, pointer, cellElement, cellIndex) {\n                if (!cellElement) {\n                    return;\n                }\n                history.push(`/skins/${cellElement.id}`);\n            });\n        }\n    }, [flkty, history]);\n\n\n    // carousel cell design\n    const inside = list.map((item) => {\n        if (cellOption.type === \"recommend-skins\") {\n            return (\n                <Div\n                    key={item.id}\n                    id={item.id}\n                    className=\"carousel-cell recommand shadowDiv\"\n                    m={{\n                        r: { xs: \"0.25rem\", md: \"1rem\" },\n                        l: { xs: \"0.25rem\", md: \"1rem\" },\n                        b: \"30px\"\n                    }}\n                    h={{ xs: \"210px\", md: \"350px\" }}\n                    w={{ xs: \"390px\", md: \"650px\" }}\n                >\n                    <img\n                        src={item.full_image_url}\n                        alt={item.name}\n                        title={item.name}\n                    />\n                </Div>\n            );\n        }\n        else if (cellOption.type === \"champion-skins\") {\n            return (\n                <Div\n                    key={item.id}\n                    id={item.id}\n                    p={{\n                        r: { xs: \"0.25rem\", md: \"1rem\" },\n                        l: { xs: \"0.25rem\", md: \"1rem\" }\n                    }}\n                >\n                    <Div\n                        className=\"carousel-cell champion-skin shadowDiv\"\n                        h={{ xs: \"336px\", md: \"336px\" }}\n                        w={{ xs: \"185px\", md: \"185px\" }}\n                        m={{ b: \"30px\" }}\n                    >\n                        <img\n                            src={item.trimmed_image_url}\n                            alt={item.name}\n                            title={item.name}\n                        />\n                    </Div>\n                </Div>\n            );\n        }\n        else return (<></>);\n    });\n\n    return (\n        <Flickity\n            className=\"carousel\"\n            options={flktyOption}\n            flickityRef={getFlickityRef}\n        >\n            {inside}\n        </Flickity>\n    );\n}\n\nexport default Carousel;","import { useState, useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\n\nfunction dataFetchReducer(state, action) {\n    switch (action.type) {\n        case \"FETCH_INIT\":\n            return {\n                ...state,\n                isLoading: true,\n                isError: false\n            };\n        case \"FETCH_SUCCESS\":\n            return {\n                isLoading: false,\n                isError: false,\n                data: action.payload\n            };\n        case \"FETCH_FAILURE\":\n            return {\n                ...state,\n                isLoading: false,\n                isError: true\n            };\n        default:\n            throw new Error();\n    }\n}\n\nfunction useDataFetch(initialUrl, initialData) {\n    const [url, setUrl] = useState(initialUrl);\n    const [state, dispatch] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isError: false,\n        data: initialData\n    });\n\n    useEffect(() => {\n        let didCancel = false;\n\n        const fetchData = async () => {\n            dispatch({ type: \"FETCH_INIT\" });\n\n            try {\n                const result = await axios(url);\n\n                if (!didCancel)\n                    dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n            } catch (error) {\n                if (!didCancel)\n                    dispatch({ type: \"FETCH_FAILURE\" });\n            }\n        };\n\n        if(url !== \"initialUrl\")\n            fetchData();\n\n        return () => {\n            didCancel = true;\n        };\n    }, [url]);\n\n    return [state, setUrl];\n}\n\nexport default useDataFetch;","import React from \"react\";\nimport { Div } from \"atomize\";\nimport Carousel from \"./Carousel\";\nimport useDataFetch from \"../hooks/useDataFetch\";\n\nfunction RecommendCarousel() {\n\n    const [{isLoading, isError, data : skinList}] = useDataFetch(\n        \"/api/recommendations\",\n        []\n    );\n    \n    const flickityOptions = {\n        initialIndex: 1,\n        wrapAround: true,\n        autoPlay: 3000,\n        pageDots: false,\n    };\n\n    return (<>{\n        isLoading ? <p> is loading... </p> :\n        isError ? <p> something error </p> :\n        <Div maxW=\"100%\">\n            <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"recommend-skins\" }} />\n        </Div>\n    }</>);\n}\n\nexport default RecommendCarousel;","import React, { useEffect } from \"react\";\nimport { Button, Icon } from \"atomize\";\nimport \"../css/Modal.css\";\n\nfunction SkinModal(props) {\n    const { isOpen, close } = props;\n\n    // lock scrolling behind\n    useEffect(() => {\n        if (isOpen) document.body.style.overflow = \"hidden\";\n        else document.body.style.overflow = \"unset\";\n\n        return () => {\n            document.body.style.overflow = \"unset\";\n        }\n    }, [isOpen]);\n\n    const className = (props.className || \"\") + \" modal\" + (isOpen ? \" openModal\" : \"\");\n    /* silde in out css */\n    return (<>\n        <div className={className}>\n            <section>\n                <Button\n                    h=\"2.5rem\"\n                    w=\"2.5rem\"\n                    bg=\"info700\"\n                    hoverBg=\"info800\"\n                    rounded=\"lg\"\n                    onClick={close}\n                >\n                    <Icon name=\"Cross\" size=\"20px\" color=\"white\" />\n                </Button>\n                {props.children}\n            </section>\n        </div>\n    </>);\n}\n\nexport default SkinModal;","import React, { useState, useEffect } from \"react\";\nimport { Div } from \"atomize\";\n\nimport Carousel from \"../components/Carousel\";\nimport Modal from \"../components/Modal\";\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport \"../css/ChampBox.css\";\n\nfunction ChampBox() {\n    const [champId, setId] = useState(0);\n    const [{ isLoading: champLoading, isError: champError, data: champList }] = useDataFetch(\"/api/champions\", []);\n\n    const [display, setDisplay] = useState(false);\n    const [{ isLoading: skinLoading, isError: skinError, data: skinList }, doFetch] = useDataFetch(\"initialUrl\", []);\n    useEffect(() => {\n        if (display)\n            doFetch(`/api/champions/${champId}/skins`);\n    }, [display, champId, doFetch]);\n    const flickityOptions = {\n        initialIndex: 0,\n        cellAlign: \"left\",\n        contain: true,\n        pageDots: false,\n        //wrapAround: true,\n        //autoPlay: 3000,\n    };\n\n    const items = champList.map((item) =>\n        <Div\n            key={item.id}\n            p=\"0.5rem\"\n        >\n            <img className=\"champion-icon\"\n                src={item.icon_url}\n                alt={item.name}\n                title={item.name}\n                onClick={() => {\n                    setId(item.id);\n                    setDisplay(true);\n                }}\n            />\n        </Div>\n    );\n\n    return (<>\n        <Div\n            d=\"flex\"\n            justify=\"space-evenly\"\n            flexWrap=\"wrap\"\n            p=\"0.5rem\"\n        >\n            {\n                champLoading ? <p> is loading... </p> :\n                champError ? <p> something error </p> :\n                items\n            }\n        </Div>\n\n        <Modal className=\"skins\" isOpen={display} close={() => setDisplay(false)}>\n            {\n                skinLoading ? <p> is loading... </p> :\n                skinError ? <p> something error </p> :\n                <Carousel list={skinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n            }\n        </Modal>\n    </>);\n}\n\nexport default ChampBox;","import React, { useEffect } from \"react\";\nimport { Div, Text } from \"atomize\";\n\nimport RecommendCarousel from \"../components/RecommendCarousel\";\nimport ChampBox from \"../components/ChampBox\";\n\nfunction Home({ setNav }) {\n    // header navigation tab\n    useEffect(() => {\n        setNav([\n            { id: 0, name: \"홈\", link: \"/home\", type: \"link\" },\n            { id: 1, name: \"추천 스킨\", link: \"#recommend-skins\", type: \"hash\" },\n            { id: 2, name: \"챔피언 목록\", link: \"#champions\", type: \"hash\" },\n            { id: 3, name: \"새 페이지 테스트\", link: \"/skins\", type: \"new-tab\" }\n        ]);\n    }, [setNav]);\n\n    return (<>\n        <Div /* title */\n            d=\"flex\"\n            h={{ xs: \"150px\", md: \"400px\" }}\n            align=\"center\"\n            justify=\"center\"\n            flexDir=\"column\"\n        >\n            <Text\n                p={{ l: \"0.5rem\", r: \"0.5rem\" }}\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                LOL PRICE TRACKER\n            </Text>\n        </Div>\n\n        <div className=\"content-container home\"/* main content */ >\n            <div className=\"content-background\" /* background */ />\n\n            <div className=\"hash-link\" id=\"recommend-skins\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Recommend Skins\n                </Text>\n            </div>\n            <RecommendCarousel />\n\n            <div className=\"hash-link\" id=\"champions\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    Champion List\n                </Text>\n            </div>\n            <ChampBox />\n            {/*}\n            <Div\n                h=\"1000px\"\n                bg=\"brown\"\n                textSize=\"display3\"\n                textAlign=\"center\"\n            >\n                Dummy\n            </Div>\n            {/*\n            <div className=\"App-header\">\n                <img src=\"/images/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.js</code> and save to reload.\n                </p>\n                <a\n                    className=\"App-link\"\n                    href=\"https://reactjs.org\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Learn React\n                </a>\n            </div>\n            */}\n        </div>\n    </>);\n}\n\nexport default Home;","import React, { useEffect, useRef } from \"react\";\nimport { Div } from \"atomize\";\nimport { Chart, registerables } from 'chart.js';\n\nfunction HistoryChart({ option, labels, data }) {\n    //chart data\n    const chartRef = useRef(null);\n    useEffect(() => {\n        const ctx = chartRef.current.getContext(\"2d\");\n        Chart.register(...registerables);\n\n\n        const chart = new Chart(ctx, {\n            type: \"line\",\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: 'My First Dataset',\n                    data: data,\n                    fill: false,\n                    borderColor: \"green\",\n                    backgroundColor: \"rgb(0,0,0,1)\",\n                    tension: 0\n                }]\n            },\n            options: option\n        });\n        console.log(\"chart generated\");\n\n        return () => {\n            console.log(\"chart destroy...\");\n            chart.destroy();\n        };\n    }, [option, labels, data]);\n\n    return (\n        <Div p={{x: \"2rem\"}}>\n            <div className=\"chart-container shadowDiv\">\n                <canvas ref={chartRef}></canvas>\n            </div>\n        </Div>\n    );\n}\n\nexport default HistoryChart;","import React, { useEffect, useState } from \"react\";\nimport { Div, Text } from \"atomize\";\nimport { useRouteMatch } from \"react-router-dom\";\n\nimport useDataFetch from \"../hooks/useDataFetch\";\nimport Carousel from \"../components/Carousel\";\nimport HistoryChart from \"../components/HistoryChart\";\n\n\n/**\n * \n * page for skin information\n * url : /skins/:skinId\n * \n */\n\nfunction Skins({ setNav }) {\n    const { params } = useRouteMatch(\"/skins/:skinId\");\n\n    // header navigation tab\n    useEffect(() => {\n        setNav([\n            { id: 0, name: \"홈\", link: \"/home\", type: \"link\" },\n            { id: 1, name: \"가격 그래프\", link: \"#chart\", type: \"hash\" },\n            { id: 2, name: \"다른 스킨들\", link: \"#champions\", type: \"hash\" }\n        ]);\n    }, [setNav]);\n\n    // skin data fetch\n    const [{ data: skin }, doSkinFetch] = useDataFetch(\n        `/api/skins/${params.skinId}`,\n        {}\n    );\n\n\n    // update when skin id changed\n    useEffect(() => {\n        doSkinFetch(`/api/skins/${params.skinId}`);\n    }, [params, doSkinFetch]);\n\n\n    //generate chart data\n    const [chartLabels, setLabel] = useState([]);\n    const [chartData, setData] = useState([]);\n    const chartOption = {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n            y: {\n                beginAtZero: true,\n                stackWeight: 1,\n                ticks: {\n                    color: \"black\"\n                }\n            },\n            x: {\n                ticks: {\n                    color: \"black\"\n                }\n            }\n        },\n        plugins: {\n            legend: false\n        }\n    }\n    useEffect(() => {\n        const history = skin.price_history || [];\n\n        history.sort();\n        setLabel(history.map(item => item.date));\n        setData(history.map(item => item.price));\n    }, [skin]);\n\n\n    // skin list of champion\n    const [{ data: championSkinList }, doChampionFetch] = useDataFetch(\"initialUrl\", []);\n    const flickityOptions = {\n        initialIndex: 0,\n        cellAlign: \"left\",\n        contain: true,\n        pageDots: false,\n        //wrapAround: true,\n        //autoPlay: 3000,\n    };\n    useEffect(() => {\n        if (skin.champion_id !== undefined) {\n            doChampionFetch(`/api/champions/${skin.champion_id}/skins`);\n        }\n    }, [skin, doChampionFetch]);\n\n\n    return (<>\n        <Div className=\"background-skin\" bgImg={skin.full_image_url} />\n\n        <Div p=\"200px\"></Div>\n\n        <div className=\"content-container skins\" /* main content */ >\n            <div className=\"content-background\" />\n           \n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    {skin.name === \"default\" ? \"기본 스킨\" : skin.name}\n                </Text>\n            </div>\n\n            {skin.name === \"default\" ? null :\n                <>\n                    <div className=\"hash-link\" id=\"chart\" />\n                    <HistoryChart option={chartOption} labels={chartLabels} data={chartData} />\n                </>\n            }\n            \n            <div className=\"hash-link\" id=\"champions\" />\n            <div className=\"content-title\">\n                <Text\n                    textSize={{ xs: \"1rem\", md: \"1.5rem\" }}\n                >\n                    챔피언의 다른 스킨들\n                </Text>\n            </div>\n            <Div\n                p={{ y: \"1rem\" }}\n            >\n                <Carousel list={championSkinList} flktyOption={flickityOptions} cellOption={{ type: \"champion-skins\" }} />\n            </Div>\n        </div>\n    </>);\n}\n\nexport default Skins;","import React, { useState, useEffect } from \"react\";\nimport { Button, Icon } from \"atomize\";\nimport \"./css/App.css\";\n\n// route\nimport {\n    Route,\n    Redirect,\n    Switch,\n    useLocation\n} from \"react-router-dom\";\n\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Skins from \"./pages/Skins\";\n\nfunction App() {\n    // scroll top when page changed\n    const { pathname } = useLocation();\n    useEffect(() => {\n        console.log(`move to \"${pathname}\"`)\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    const [anchorList, setList] = useState([]);\n    \n    const handleTop= () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    return (<>\n        <header className=\"main-header\">\n            <Nav anchorList={anchorList} />\n        </header>\n\n        <Button className=\"go-to-top\"\n            h=\"2.5rem\"\n            w=\"2.5rem\"\n            bg=\"info300\"\n            hoverBg=\"info400\"\n            rounded=\"lg\"\n            m={{ r: \"1rem\" }}\n            onClick={handleTop}\n        >\n            <Icon name=\"UpArrow\" size=\"20px\" color=\"info700\" />\n        </Button>\n\n        <Switch>\n            <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/home\">\n                <Home setNav={setList} />\n            </Route>\n            <Route exact path=\"/skins/:skinId\">\n                <Skins setNav={setList} />\n            </Route>\n            <Route exect path=\"/skins\">\n                <p>skin page</p>\n            </Route>\n            <Route path=\"/\">\n                <p>404 error</p>\n            </Route>\n        </Switch>\n    </>);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// Theme\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { ThemeProvider, StyleReset } from \"atomize\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst theme = {\n    colors: {\n        primary: 'tomato',\n        accent: 'yellow',\n    },\n};\n\nconst debug =\n    process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// 1. Create a client engine instance\nconst engine = new Styletron();\n\n// 2. Provide the engine to the app\n// debug engine needs inlined source maps\nReactDOM.render(\n    <React.StrictMode>\n        <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n            <ThemeProvider theme={theme}>\n                <StyleReset />\n                <Router>\n                    <App />\n                </Router>\n            </ThemeProvider>\n        </StyletronProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}